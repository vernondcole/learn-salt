---
# this salt pillar file preserves original configuration info
{{ pillar['salt_created_message'] }}

# State bevy_master/populate_bootstrap_settings.sls
# uses file bevy_master/files/bootstrap_settings.pillar.jinja

# These settings are pillar values defined for all minions in the bevy

{#- Dear maintainer:
     Don't be confused...
     The 'pillar.get' values here will be initially supplied for the bevy master
     by Vagrant or the bootstrap.py script.
        This template should only be run on the bevy master
        when the pillar flag "doing_bootsrap" is defined.
        The next line ought to trigger an error if otherwise -#}
{% set intentional_error = pillar['doing_bootstrap'] %}  {# Oops! You goofed. #}

{#- Think about it...
    jinja things here will become literals
    in the production pillar pillar/bootstrap_settings.sls file.
    -#}

# linux username to own files and run user jobs on server machines...
my_linux_user: {{ salt['config.get']('my_linux_user') }}
#
my_linux_uid: '{{ salt['config.get']('my_linux_uid') }}'
my_linux_gid: '{{ salt['config.get']('my_linux_gid') }}'
#
# Linux password hash for interactive user
linux_password_hash: "{{ salt['config.get']('linux_password_hash', '') }}"
#
force_linux_user_password: {{ salt['config.get']('force_linux_user_password', true) }}

# copy of the pillar settings from bootstrap -- in case I re-run the state
bevy: {{ salt['config.get']('bevy') }}
node_name: {{ salt['config.get']('node_name') }}
run_second_minion: {{ salt['config.get']('run_second_minion') }}
vbox_install: {{ salt['config.get']('vbox_install') }}
vagranthost: {{ salt['config.get']('vagranthost') }}
network_mask: {{ salt['config.get']('network_mask', '') }}
runas: {{ salt['config.get']('runas') }}
cwd: {{ salt['config.get']('cwd') }}
bevy_root: '{{ salt['config.get']('bevy_root') }}'
bevymaster_url: {{ salt['config.get']('bevymaster_url') }}
...

